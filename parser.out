Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TO

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> definicion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> mientras_instr
Rule 8     instruccion -> if_instr
Rule 9     instruccion -> if_else_instr
Rule 10    instruccion -> for_instr
Rule 11    instruccion -> for_asign
Rule 12    imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
Rule 13    definicion_instr -> NUMERO ID PTCOMA
Rule 14    asignacion_instr -> ID IGUAL expresion_numerica PTCOMA
Rule 15    mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 16    for_asign -> ID IGUAL expresion_numerica
Rule 17    for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
Rule 18    function_call -> ID PARIZQ PARDER
Rule 19    function_call -> ID PARIZQ expresion_numerica COMA expresion_numerica PARDER
Rule 20    function -> DEF ID PARIZQ argument_list_option PARDER LLAVIZQ instrucciones LLAVDER
Rule 21    argument_list_option -> argument_list
Rule 22    argument_list -> argument_list COMA argument
Rule 23    argument_list -> argument
Rule 24    argument -> ID
Rule 25    return-statement -> RETURN PTCOMA
Rule 26    return-statement -> RETURN expresion_numerica PTCOMA
Rule 27    if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 28    if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 29    expresion_numerica -> expresion_numerica MAS expresion_numerica
Rule 30    expresion_numerica -> expresion_numerica MENOS expresion_numerica
Rule 31    expresion_numerica -> expresion_numerica POR expresion_numerica
Rule 32    expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica
Rule 33    expresion_numerica -> MENOS expresion_numerica
Rule 34    expresion_numerica -> PARIZQ expresion_numerica PARDER
Rule 35    expresion_numerica -> ENTERO
Rule 36    expresion_numerica -> DECIMAL
Rule 37    expresion_numerica -> ID
Rule 38    expresion_cadena -> expresion_cadena CONCAT expresion_cadena
Rule 39    expresion_cadena -> CADENA
Rule 40    expresion_cadena -> expresion_numerica
Rule 41    expresion_logica -> expresion_numerica MAYQUE expresion_numerica
Rule 42    expresion_logica -> expresion_numerica MENQUE expresion_numerica
Rule 43    expresion_logica -> expresion_numerica IGUALQUE expresion_numerica
Rule 44    expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica
Rule 45    expresion_logica -> expresion_numerica MAYIGUAL expresion_numerica
Rule 46    expresion_logica -> expresion_numerica MENIGUAL expresion_numerica

Terminals, with rules where they appear

CADENA               : 39
COMA                 : 19 22
CONCAT               : 38
DECIMAL              : 36
DEF                  : 20
DIVIDIDO             : 32
ELSE                 : 28
ENTERO               : 35
FOR                  : 17
ID                   : 13 14 16 18 19 20 24 37
IF                   : 27 28
IGUAL                : 14 16
IGUALQUE             : 43
IMPRIMIR             : 12
LLAVDER              : 15 17 20 27 28 28
LLAVIZQ              : 15 17 20 27 28 28
MAS                  : 29
MAYIGUAL             : 45
MAYQUE               : 41
MENIGUAL             : 46
MENOS                : 30 33
MENQUE               : 42
MIENTRAS             : 15
NIGUALQUE            : 44
NUMERO               : 13
PARDER               : 12 15 17 18 19 20 27 28 34
PARIZQ               : 12 15 17 18 19 20 27 28 34
POR                  : 31
PTCOMA               : 12 13 14 25 26
PTCOMACERRADO        : 17 17
RETURN               : 25 26
TO                   : 
error                : 

Nonterminals, with rules where they appear

argument             : 22 23
argument_list        : 21 22
argument_list_option : 20
asignacion_instr     : 6
definicion_instr     : 5
expresion_cadena     : 12 38 38
expresion_logica     : 15 17 27 28
expresion_numerica   : 14 16 19 19 26 29 29 30 30 31 31 32 32 33 34 40 41 41 42 42 43 43 44 44 45 45 46 46
for_asign            : 11 17 17
for_instr            : 10
function             : 
function_call        : 
if_else_instr        : 9
if_instr             : 8
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 15 17 20 27 28 28
mientras_instr       : 7
return-statement     : 

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10
    for_asign                      shift and go to state 11

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    $end            reduce using rule 1 (init -> instrucciones .)
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10
    for_asign                      shift and go to state 11

state 3

    (3) instrucciones -> instruccion .

    IMPRIMIR        reduce using rule 3 (instrucciones -> instruccion .)
    NUMERO          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    MIENTRAS        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    IMPRIMIR        reduce using rule 4 (instruccion -> imprimir_instr .)
    NUMERO          reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    MIENTRAS        reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    FOR             reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> definicion_instr .

    IMPRIMIR        reduce using rule 5 (instruccion -> definicion_instr .)
    NUMERO          reduce using rule 5 (instruccion -> definicion_instr .)
    ID              reduce using rule 5 (instruccion -> definicion_instr .)
    MIENTRAS        reduce using rule 5 (instruccion -> definicion_instr .)
    IF              reduce using rule 5 (instruccion -> definicion_instr .)
    FOR             reduce using rule 5 (instruccion -> definicion_instr .)
    $end            reduce using rule 5 (instruccion -> definicion_instr .)
    LLAVDER         reduce using rule 5 (instruccion -> definicion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    IMPRIMIR        reduce using rule 6 (instruccion -> asignacion_instr .)
    NUMERO          reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    MIENTRAS        reduce using rule 6 (instruccion -> asignacion_instr .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr .)
    FOR             reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> mientras_instr .

    IMPRIMIR        reduce using rule 7 (instruccion -> mientras_instr .)
    NUMERO          reduce using rule 7 (instruccion -> mientras_instr .)
    ID              reduce using rule 7 (instruccion -> mientras_instr .)
    MIENTRAS        reduce using rule 7 (instruccion -> mientras_instr .)
    IF              reduce using rule 7 (instruccion -> mientras_instr .)
    FOR             reduce using rule 7 (instruccion -> mientras_instr .)
    $end            reduce using rule 7 (instruccion -> mientras_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> mientras_instr .)


state 8

    (8) instruccion -> if_instr .

    IMPRIMIR        reduce using rule 8 (instruccion -> if_instr .)
    NUMERO          reduce using rule 8 (instruccion -> if_instr .)
    ID              reduce using rule 8 (instruccion -> if_instr .)
    MIENTRAS        reduce using rule 8 (instruccion -> if_instr .)
    IF              reduce using rule 8 (instruccion -> if_instr .)
    FOR             reduce using rule 8 (instruccion -> if_instr .)
    $end            reduce using rule 8 (instruccion -> if_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> if_instr .)


state 9

    (9) instruccion -> if_else_instr .

    IMPRIMIR        reduce using rule 9 (instruccion -> if_else_instr .)
    NUMERO          reduce using rule 9 (instruccion -> if_else_instr .)
    ID              reduce using rule 9 (instruccion -> if_else_instr .)
    MIENTRAS        reduce using rule 9 (instruccion -> if_else_instr .)
    IF              reduce using rule 9 (instruccion -> if_else_instr .)
    FOR             reduce using rule 9 (instruccion -> if_else_instr .)
    $end            reduce using rule 9 (instruccion -> if_else_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> if_else_instr .)


state 10

    (10) instruccion -> for_instr .

    IMPRIMIR        reduce using rule 10 (instruccion -> for_instr .)
    NUMERO          reduce using rule 10 (instruccion -> for_instr .)
    ID              reduce using rule 10 (instruccion -> for_instr .)
    MIENTRAS        reduce using rule 10 (instruccion -> for_instr .)
    IF              reduce using rule 10 (instruccion -> for_instr .)
    FOR             reduce using rule 10 (instruccion -> for_instr .)
    $end            reduce using rule 10 (instruccion -> for_instr .)
    LLAVDER         reduce using rule 10 (instruccion -> for_instr .)


state 11

    (11) instruccion -> for_asign .

    IMPRIMIR        reduce using rule 11 (instruccion -> for_asign .)
    NUMERO          reduce using rule 11 (instruccion -> for_asign .)
    ID              reduce using rule 11 (instruccion -> for_asign .)
    MIENTRAS        reduce using rule 11 (instruccion -> for_asign .)
    IF              reduce using rule 11 (instruccion -> for_asign .)
    FOR             reduce using rule 11 (instruccion -> for_asign .)
    $end            reduce using rule 11 (instruccion -> for_asign .)
    LLAVDER         reduce using rule 11 (instruccion -> for_asign .)


state 12

    (12) imprimir_instr -> IMPRIMIR . PARIZQ expresion_cadena PARDER PTCOMA

    PARIZQ          shift and go to state 19


state 13

    (13) definicion_instr -> NUMERO . ID PTCOMA

    ID              shift and go to state 20


state 14

    (14) asignacion_instr -> ID . IGUAL expresion_numerica PTCOMA
    (16) for_asign -> ID . IGUAL expresion_numerica

    IGUAL           shift and go to state 21


state 15

    (15) mientras_instr -> MIENTRAS . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 22


state 16

    (27) if_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 23


state 17

    (17) for_instr -> FOR . PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 24


state 18

    (2) instrucciones -> instrucciones instruccion .

    IMPRIMIR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NUMERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MIENTRAS        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 19

    (12) imprimir_instr -> IMPRIMIR PARIZQ . expresion_cadena PARDER PTCOMA
    (38) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (39) expresion_cadena -> . CADENA
    (40) expresion_cadena -> . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    CADENA          shift and go to state 27
    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_cadena               shift and go to state 26
    expresion_numerica             shift and go to state 28

state 20

    (13) definicion_instr -> NUMERO ID . PTCOMA

    PTCOMA          shift and go to state 33


state 21

    (14) asignacion_instr -> ID IGUAL . expresion_numerica PTCOMA
    (16) for_asign -> ID IGUAL . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 34

state 22

    (15) mientras_instr -> MIENTRAS PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (42) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (43) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (44) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (45) expresion_logica -> . expresion_numerica MAYIGUAL expresion_numerica
    (46) expresion_logica -> . expresion_numerica MENIGUAL expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_logica               shift and go to state 35
    expresion_numerica             shift and go to state 36

state 23

    (27) if_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (41) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (42) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (43) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (44) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (45) expresion_logica -> . expresion_numerica MAYIGUAL expresion_numerica
    (46) expresion_logica -> . expresion_numerica MENIGUAL expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_logica               shift and go to state 37
    expresion_numerica             shift and go to state 36

state 24

    (17) for_instr -> FOR PARIZQ . for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    ID              shift and go to state 39

    for_asign                      shift and go to state 38

state 25

    (34) expresion_numerica -> PARIZQ . expresion_numerica PARDER
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 40

state 26

    (12) imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena . PARDER PTCOMA
    (38) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    PARDER          shift and go to state 41
    CONCAT          shift and go to state 42


state 27

    (39) expresion_cadena -> CADENA .

    PARDER          reduce using rule 39 (expresion_cadena -> CADENA .)
    CONCAT          reduce using rule 39 (expresion_cadena -> CADENA .)


state 28

    (40) expresion_cadena -> expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 40 (expresion_cadena -> expresion_numerica .)
    CONCAT          reduce using rule 40 (expresion_cadena -> expresion_numerica .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 29

    (33) expresion_numerica -> MENOS . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 47

state 30

    (35) expresion_numerica -> ENTERO .

    MAS             reduce using rule 35 (expresion_numerica -> ENTERO .)
    MENOS           reduce using rule 35 (expresion_numerica -> ENTERO .)
    POR             reduce using rule 35 (expresion_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 35 (expresion_numerica -> ENTERO .)
    PARDER          reduce using rule 35 (expresion_numerica -> ENTERO .)
    CONCAT          reduce using rule 35 (expresion_numerica -> ENTERO .)
    PTCOMA          reduce using rule 35 (expresion_numerica -> ENTERO .)
    IMPRIMIR        reduce using rule 35 (expresion_numerica -> ENTERO .)
    NUMERO          reduce using rule 35 (expresion_numerica -> ENTERO .)
    ID              reduce using rule 35 (expresion_numerica -> ENTERO .)
    MIENTRAS        reduce using rule 35 (expresion_numerica -> ENTERO .)
    IF              reduce using rule 35 (expresion_numerica -> ENTERO .)
    FOR             reduce using rule 35 (expresion_numerica -> ENTERO .)
    $end            reduce using rule 35 (expresion_numerica -> ENTERO .)
    LLAVDER         reduce using rule 35 (expresion_numerica -> ENTERO .)
    MAYQUE          reduce using rule 35 (expresion_numerica -> ENTERO .)
    MENQUE          reduce using rule 35 (expresion_numerica -> ENTERO .)
    IGUALQUE        reduce using rule 35 (expresion_numerica -> ENTERO .)
    NIGUALQUE       reduce using rule 35 (expresion_numerica -> ENTERO .)
    MAYIGUAL        reduce using rule 35 (expresion_numerica -> ENTERO .)
    MENIGUAL        reduce using rule 35 (expresion_numerica -> ENTERO .)
    PTCOMACERRADO   reduce using rule 35 (expresion_numerica -> ENTERO .)


state 31

    (36) expresion_numerica -> DECIMAL .

    MAS             reduce using rule 36 (expresion_numerica -> DECIMAL .)
    MENOS           reduce using rule 36 (expresion_numerica -> DECIMAL .)
    POR             reduce using rule 36 (expresion_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 36 (expresion_numerica -> DECIMAL .)
    PARDER          reduce using rule 36 (expresion_numerica -> DECIMAL .)
    CONCAT          reduce using rule 36 (expresion_numerica -> DECIMAL .)
    PTCOMA          reduce using rule 36 (expresion_numerica -> DECIMAL .)
    IMPRIMIR        reduce using rule 36 (expresion_numerica -> DECIMAL .)
    NUMERO          reduce using rule 36 (expresion_numerica -> DECIMAL .)
    ID              reduce using rule 36 (expresion_numerica -> DECIMAL .)
    MIENTRAS        reduce using rule 36 (expresion_numerica -> DECIMAL .)
    IF              reduce using rule 36 (expresion_numerica -> DECIMAL .)
    FOR             reduce using rule 36 (expresion_numerica -> DECIMAL .)
    $end            reduce using rule 36 (expresion_numerica -> DECIMAL .)
    LLAVDER         reduce using rule 36 (expresion_numerica -> DECIMAL .)
    MAYQUE          reduce using rule 36 (expresion_numerica -> DECIMAL .)
    MENQUE          reduce using rule 36 (expresion_numerica -> DECIMAL .)
    IGUALQUE        reduce using rule 36 (expresion_numerica -> DECIMAL .)
    NIGUALQUE       reduce using rule 36 (expresion_numerica -> DECIMAL .)
    MAYIGUAL        reduce using rule 36 (expresion_numerica -> DECIMAL .)
    MENIGUAL        reduce using rule 36 (expresion_numerica -> DECIMAL .)
    PTCOMACERRADO   reduce using rule 36 (expresion_numerica -> DECIMAL .)


state 32

    (37) expresion_numerica -> ID .

    MAS             reduce using rule 37 (expresion_numerica -> ID .)
    MENOS           reduce using rule 37 (expresion_numerica -> ID .)
    POR             reduce using rule 37 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 37 (expresion_numerica -> ID .)
    PARDER          reduce using rule 37 (expresion_numerica -> ID .)
    CONCAT          reduce using rule 37 (expresion_numerica -> ID .)
    PTCOMA          reduce using rule 37 (expresion_numerica -> ID .)
    IMPRIMIR        reduce using rule 37 (expresion_numerica -> ID .)
    NUMERO          reduce using rule 37 (expresion_numerica -> ID .)
    ID              reduce using rule 37 (expresion_numerica -> ID .)
    MIENTRAS        reduce using rule 37 (expresion_numerica -> ID .)
    IF              reduce using rule 37 (expresion_numerica -> ID .)
    FOR             reduce using rule 37 (expresion_numerica -> ID .)
    $end            reduce using rule 37 (expresion_numerica -> ID .)
    LLAVDER         reduce using rule 37 (expresion_numerica -> ID .)
    MAYQUE          reduce using rule 37 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 37 (expresion_numerica -> ID .)
    IGUALQUE        reduce using rule 37 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 37 (expresion_numerica -> ID .)
    MAYIGUAL        reduce using rule 37 (expresion_numerica -> ID .)
    MENIGUAL        reduce using rule 37 (expresion_numerica -> ID .)
    PTCOMACERRADO   reduce using rule 37 (expresion_numerica -> ID .)


state 33

    (13) definicion_instr -> NUMERO ID PTCOMA .

    IMPRIMIR        reduce using rule 13 (definicion_instr -> NUMERO ID PTCOMA .)
    NUMERO          reduce using rule 13 (definicion_instr -> NUMERO ID PTCOMA .)
    ID              reduce using rule 13 (definicion_instr -> NUMERO ID PTCOMA .)
    MIENTRAS        reduce using rule 13 (definicion_instr -> NUMERO ID PTCOMA .)
    IF              reduce using rule 13 (definicion_instr -> NUMERO ID PTCOMA .)
    FOR             reduce using rule 13 (definicion_instr -> NUMERO ID PTCOMA .)
    $end            reduce using rule 13 (definicion_instr -> NUMERO ID PTCOMA .)
    LLAVDER         reduce using rule 13 (definicion_instr -> NUMERO ID PTCOMA .)


state 34

    (14) asignacion_instr -> ID IGUAL expresion_numerica . PTCOMA
    (16) for_asign -> ID IGUAL expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PTCOMA          shift and go to state 48
    IMPRIMIR        reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    NUMERO          reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    ID              reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    MIENTRAS        reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    IF              reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    FOR             reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    $end            reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    LLAVDER         reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 35

    (15) mientras_instr -> MIENTRAS PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 49


state 36

    (41) expresion_logica -> expresion_numerica . MAYQUE expresion_numerica
    (42) expresion_logica -> expresion_numerica . MENQUE expresion_numerica
    (43) expresion_logica -> expresion_numerica . IGUALQUE expresion_numerica
    (44) expresion_logica -> expresion_numerica . NIGUALQUE expresion_numerica
    (45) expresion_logica -> expresion_numerica . MAYIGUAL expresion_numerica
    (46) expresion_logica -> expresion_numerica . MENIGUAL expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MAYIGUAL        shift and go to state 54
    MENIGUAL        shift and go to state 55
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 37

    (27) if_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 56


state 38

    (17) for_instr -> FOR PARIZQ for_asign . PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER

    PTCOMACERRADO   shift and go to state 57


state 39

    (16) for_asign -> ID . IGUAL expresion_numerica

    IGUAL           shift and go to state 58


state 40

    (34) expresion_numerica -> PARIZQ expresion_numerica . PARDER
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          shift and go to state 59
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 41

    (12) imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER . PTCOMA

    PTCOMA          shift and go to state 60


state 42

    (38) expresion_cadena -> expresion_cadena CONCAT . expresion_cadena
    (38) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (39) expresion_cadena -> . CADENA
    (40) expresion_cadena -> . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    CADENA          shift and go to state 27
    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_cadena               shift and go to state 61
    expresion_numerica             shift and go to state 28

state 43

    (29) expresion_numerica -> expresion_numerica MAS . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 62

state 44

    (30) expresion_numerica -> expresion_numerica MENOS . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 63

state 45

    (31) expresion_numerica -> expresion_numerica POR . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 64

state 46

    (32) expresion_numerica -> expresion_numerica DIVIDIDO . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 65

state 47

    (33) expresion_numerica -> MENOS expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    MENOS           reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    POR             reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    DIVIDIDO        reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    PARDER          reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    CONCAT          reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    PTCOMA          reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    IMPRIMIR        reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    NUMERO          reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    ID              reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    MIENTRAS        reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    IF              reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    FOR             reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    $end            reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    LLAVDER         reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    MAYQUE          reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    MENQUE          reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    MAYIGUAL        reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    MENIGUAL        reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)
    PTCOMACERRADO   reduce using rule 33 (expresion_numerica -> MENOS expresion_numerica .)

  ! MAS             [ shift and go to state 43 ]
  ! MENOS           [ shift and go to state 44 ]
  ! POR             [ shift and go to state 45 ]
  ! DIVIDIDO        [ shift and go to state 46 ]


state 48

    (14) asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .

    IMPRIMIR        reduce using rule 14 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    NUMERO          reduce using rule 14 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    ID              reduce using rule 14 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    MIENTRAS        reduce using rule 14 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    IF              reduce using rule 14 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    FOR             reduce using rule 14 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    $end            reduce using rule 14 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    LLAVDER         reduce using rule 14 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)


state 49

    (15) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 66


state 50

    (41) expresion_logica -> expresion_numerica MAYQUE . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 67

state 51

    (42) expresion_logica -> expresion_numerica MENQUE . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 68

state 52

    (43) expresion_logica -> expresion_numerica IGUALQUE . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 69

state 53

    (44) expresion_logica -> expresion_numerica NIGUALQUE . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 70

state 54

    (45) expresion_logica -> expresion_numerica MAYIGUAL . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 71

state 55

    (46) expresion_logica -> expresion_numerica MENIGUAL . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 72

state 56

    (27) if_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 73


state 57

    (17) for_instr -> FOR PARIZQ for_asign PTCOMACERRADO . expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (41) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (42) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (43) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (44) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (45) expresion_logica -> . expresion_numerica MAYIGUAL expresion_numerica
    (46) expresion_logica -> . expresion_numerica MENIGUAL expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_logica               shift and go to state 74
    expresion_numerica             shift and go to state 36

state 58

    (16) for_asign -> ID IGUAL . expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (31) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (32) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (33) expresion_numerica -> . MENOS expresion_numerica
    (34) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (35) expresion_numerica -> . ENTERO
    (36) expresion_numerica -> . DECIMAL
    (37) expresion_numerica -> . ID

    MENOS           shift and go to state 29
    PARIZQ          shift and go to state 25
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 75

state 59

    (34) expresion_numerica -> PARIZQ expresion_numerica PARDER .

    MAS             reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENOS           reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    POR             reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    DIVIDIDO        reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PARDER          reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    CONCAT          reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PTCOMA          reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IMPRIMIR        reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    NUMERO          reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    ID              reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MIENTRAS        reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IF              reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    FOR             reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    $end            reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    LLAVDER         reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MAYQUE          reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENQUE          reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IGUALQUE        reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    NIGUALQUE       reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MAYIGUAL        reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENIGUAL        reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PTCOMACERRADO   reduce using rule 34 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)


state 60

    (12) imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .

    IMPRIMIR        reduce using rule 12 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    NUMERO          reduce using rule 12 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    ID              reduce using rule 12 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    MIENTRAS        reduce using rule 12 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    IF              reduce using rule 12 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    FOR             reduce using rule 12 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    $end            reduce using rule 12 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)
    LLAVDER         reduce using rule 12 (imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA .)


state 61

    (38) expresion_cadena -> expresion_cadena CONCAT expresion_cadena .
    (38) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    PARDER          reduce using rule 38 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)
    CONCAT          reduce using rule 38 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)

  ! CONCAT          [ shift and go to state 42 ]


state 62

    (29) expresion_numerica -> expresion_numerica MAS expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENOS           reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PARDER          reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    CONCAT          reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PTCOMA          reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IMPRIMIR        reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NUMERO          reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    ID              reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MIENTRAS        reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IF              reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    FOR             reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    $end            reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    LLAVDER         reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAYQUE          reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENQUE          reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IGUALQUE        reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAYIGUAL        reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENIGUAL        reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PTCOMACERRADO   reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46

  ! POR             [ reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 29 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! MAS             [ shift and go to state 43 ]
  ! MENOS           [ shift and go to state 44 ]


state 63

    (30) expresion_numerica -> expresion_numerica MENOS expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENOS           reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PARDER          reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    CONCAT          reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PTCOMA          reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IMPRIMIR        reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NUMERO          reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    ID              reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MIENTRAS        reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IF              reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    FOR             reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    $end            reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    LLAVDER         reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAYQUE          reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENQUE          reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAYIGUAL        reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENIGUAL        reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PTCOMACERRADO   reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46

  ! POR             [ reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 30 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! MAS             [ shift and go to state 43 ]
  ! MENOS           [ shift and go to state 44 ]


state 64

    (31) expresion_numerica -> expresion_numerica POR expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENOS           reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    POR             reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DIVIDIDO        reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PARDER          reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    CONCAT          reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PTCOMA          reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IMPRIMIR        reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NUMERO          reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ID              reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MIENTRAS        reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IF              reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    FOR             reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    $end            reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    LLAVDER         reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAYQUE          reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENQUE          reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IGUALQUE        reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NIGUALQUE       reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAYIGUAL        reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENIGUAL        reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PTCOMACERRADO   reduce using rule 31 (expresion_numerica -> expresion_numerica POR expresion_numerica .)

  ! MAS             [ shift and go to state 43 ]
  ! MENOS           [ shift and go to state 44 ]
  ! POR             [ shift and go to state 45 ]
  ! DIVIDIDO        [ shift and go to state 46 ]


state 65

    (32) expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENOS           reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    POR             reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DIVIDIDO        reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PARDER          reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    CONCAT          reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PTCOMA          reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IMPRIMIR        reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NUMERO          reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ID              reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MIENTRAS        reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IF              reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    FOR             reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    $end            reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    LLAVDER         reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAYQUE          reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENQUE          reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IGUALQUE        reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NIGUALQUE       reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAYIGUAL        reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENIGUAL        reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PTCOMACERRADO   reduce using rule 32 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)

  ! MAS             [ shift and go to state 43 ]
  ! MENOS           [ shift and go to state 44 ]
  ! POR             [ shift and go to state 45 ]
  ! DIVIDIDO        [ shift and go to state 46 ]


state 66

    (15) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    instrucciones                  shift and go to state 76
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10
    for_asign                      shift and go to state 11

state 67

    (41) expresion_logica -> expresion_numerica MAYQUE expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 41 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    PTCOMACERRADO   reduce using rule 41 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 68

    (42) expresion_logica -> expresion_numerica MENQUE expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 42 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    PTCOMACERRADO   reduce using rule 42 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 69

    (43) expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 43 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    PTCOMACERRADO   reduce using rule 43 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 70

    (44) expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 44 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    PTCOMACERRADO   reduce using rule 44 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 71

    (45) expresion_logica -> expresion_numerica MAYIGUAL expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 45 (expresion_logica -> expresion_numerica MAYIGUAL expresion_numerica .)
    PTCOMACERRADO   reduce using rule 45 (expresion_logica -> expresion_numerica MAYIGUAL expresion_numerica .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 72

    (46) expresion_logica -> expresion_numerica MENIGUAL expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 46 (expresion_logica -> expresion_numerica MENIGUAL expresion_numerica .)
    PTCOMACERRADO   reduce using rule 46 (expresion_logica -> expresion_numerica MENIGUAL expresion_numerica .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 73

    (27) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (28) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    instrucciones                  shift and go to state 77
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10
    for_asign                      shift and go to state 11

state 74

    (17) for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica . PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER

    PTCOMACERRADO   shift and go to state 78


state 75

    (16) for_asign -> ID IGUAL expresion_numerica .
    (29) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (31) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (32) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PTCOMACERRADO   reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    PARDER          reduce using rule 16 (for_asign -> ID IGUAL expresion_numerica .)
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    POR             shift and go to state 45
    DIVIDIDO        shift and go to state 46


state 76

    (15) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    LLAVDER         shift and go to state 79
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10
    for_asign                      shift and go to state 11

state 77

    (27) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (28) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    LLAVDER         shift and go to state 80
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10
    for_asign                      shift and go to state 11

state 78

    (17) for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO . for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    ID              shift and go to state 39

    for_asign                      shift and go to state 81

state 79

    (15) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .

    IMPRIMIR        reduce using rule 15 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 15 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 15 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 15 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 15 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 15 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 15 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 15 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)


state 80

    (27) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .
    (28) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER

    IMPRIMIR        reduce using rule 27 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 27 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 27 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 27 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 27 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 27 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 27 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 27 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 82


state 81

    (17) for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 83


state 82

    (28) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 84


state 83

    (17) for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 85


state 84

    (28) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    instrucciones                  shift and go to state 86
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10
    for_asign                      shift and go to state 11

state 85

    (17) for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    for_asign                      shift and go to state 11
    instrucciones                  shift and go to state 87
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10

state 86

    (28) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    LLAVDER         shift and go to state 88
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10
    for_asign                      shift and go to state 11

state 87

    (17) for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) instruccion -> . for_instr
    (11) instruccion -> . for_asign
    (12) imprimir_instr -> . IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA
    (13) definicion_instr -> . NUMERO ID PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (15) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (27) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (28) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (17) for_instr -> . FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER
    (16) for_asign -> . ID IGUAL expresion_numerica

    LLAVDER         shift and go to state 89
    IMPRIMIR        shift and go to state 12
    NUMERO          shift and go to state 13
    ID              shift and go to state 14
    MIENTRAS        shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17

    for_asign                      shift and go to state 11
    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9
    for_instr                      shift and go to state 10

state 88

    (28) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    IMPRIMIR        reduce using rule 28 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 28 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 28 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 28 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 28 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 28 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 28 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 28 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)


state 89

    (17) for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER .

    IMPRIMIR        reduce using rule 17 (for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 17 (for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 17 (for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 17 (for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 17 (for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 17 (for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 17 (for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 17 (for_instr -> FOR PARIZQ for_asign PTCOMACERRADO expresion_logica PTCOMACERRADO for_asign PARDER LLAVIZQ instrucciones LLAVDER .)

